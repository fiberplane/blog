---
import BaseLayout from './BaseLayout.astro';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  author: string;
  tags: string[];
}

const { title, description, pubDate, updatedDate, author, tags } = Astro.props;

const formattedPubDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}).format(pubDate);

const formattedUpdatedDate = updatedDate
  ? new Intl.DateTimeFormat('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    }).format(updatedDate)
  : undefined;
---

<BaseLayout title={title} description={description}>
  <article class="blog-post">
    <header class="post-header">
      <h1>{title}</h1>
      <div class="post-meta">
        <time datetime={pubDate.toISOString()}>{formattedPubDate}</time>
        {formattedUpdatedDate && (
          <span class="updated">
            (Updated: <time datetime={updatedDate?.toISOString()}>{formattedUpdatedDate}</time>)
          </span>
        )}
        <span class="author">by {author}</span>
      </div>
      {tags.length > 0 && (
        <div class="tags">
          {tags.map((tag) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </header>
    <div class="post-content">
      <slot />
    </div>
  </article>
</BaseLayout>

<style>
  .blog-post {
    max-width: 680px;
    margin: 0 auto;
    padding: 4rem 2rem;
  }

  .post-header {
    margin-bottom: 4rem;
    text-align: center;
  }

  h1 {
    font-size: 3rem;
    font-weight: 700;
    line-height: 1.1;
    letter-spacing: -0.03em;
    margin-bottom: 1.5rem;
    color: var(--color-heading);
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    margin-bottom: 1.5rem;
  }

  .post-meta time {
    font-weight: 400;
  }

  .post-meta::after {
    content: "â€¢";
    margin: 0 0.25rem;
  }

  .post-meta .author::before {
    content: "";
  }

  .updated {
    color: var(--color-text-secondary);
  }

  .author {
    color: var(--color-text-secondary);
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
  }

  .tag {
    padding: 0.375rem 0.875rem;
    background-color: var(--color-bg-secondary);
    color: var(--color-text);
    border: 1px solid var(--color-border);
    border-radius: 9999px;
    font-size: 0.8125rem;
    font-weight: 500;
    text-transform: capitalize;
    letter-spacing: 0;
  }

  .post-content {
    line-height: 1.75;
    text-align: left;
  }

  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4) {
    margin-top: 3rem;
    margin-bottom: 1.25rem;
    font-weight: 600;
    line-height: 1.3;
    letter-spacing: -0.02em;
    color: var(--color-heading);
  }

  .post-content :global(h2) {
    font-size: 2rem;
  }

  .post-content :global(h3) {
    font-size: 1.5rem;
  }

  .post-content :global(h4) {
    font-size: 1.25rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.75rem;
    font-size: 1.0625rem;
    color: var(--color-text);
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .post-content :global(a) {
    color: var(--color-accent-dark);
    text-decoration: none;
    font-weight: 500;
  }

  .post-content :global(a:hover) {
    color: var(--color-accent);
    text-decoration: underline;
  }

  .post-content :global(code) {
    background-color: var(--color-code-bg);
    border: 1px solid var(--color-code-border);
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
    font-family: 'Geist Mono', monospace;
    color: var(--color-heading);
  }

  .post-content :global(pre) {
    background-color: var(--color-code-bg) !important;
    border: 1px solid var(--color-code-border) !important;
    padding: 1rem !important;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin-bottom: 1.5rem;
  }

  .post-content :global(pre code) {
    background-color: transparent !important;
    border: none !important;
    padding: 0;
  }

  .post-content :global(blockquote) {
    border-left: 3px solid var(--color-accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    color: var(--color-text-secondary);
    font-style: italic;
  }

  .post-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin: 2rem 0;
    display: block;
  }

  .post-content :global(video) {
    max-width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin: 2rem 0;
    display: block;
  }

  @media (max-width: 768px) {
    .blog-post {
      padding: 2rem 1.5rem;
    }

    h1 {
      font-size: 2.25rem;
      line-height: 1.2;
    }

    .post-content :global(h2) {
      font-size: 1.75rem;
    }

    .post-content :global(h3) {
      font-size: 1.375rem;
    }

    .post-content :global(p) {
      font-size: 1rem;
    }
  }
</style>
